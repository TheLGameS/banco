package br.ufsc.creche.model;

// Generated 22/12/2014 15:06:02 by Hibernate Tools 4.3.1

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ClienteRepresentante generated by hbm2java
 */
@Entity
@Table(name = "CLIENTEREPRESENTANTE")
public class ClienteRepresentante implements java.io.Serializable {

	private static final long serialVersionUID = 8010759520560663275L;
	private ClienteRepresentanteId id;
	private CategoriaFiscal categoriaFiscal;
	private Cliente cliente;
	private CondicaoPagto condicaoPagto;
	private EmpresaPauta empresaPauta;
	private FormaPagto formaPagtoByClrFpa;
	private FormaPagto formaPagtoByClrFpc;
	private Representante representante;
	private BigDecimal clrPer;
	private Integer clrFpr;

	public ClienteRepresentante() {
	}

	public ClienteRepresentante(ClienteRepresentanteId id,
			CategoriaFiscal categoriaFiscal, Cliente cliente,
			EmpresaPauta empresaPauta, Representante representante,
			BigDecimal clrPer) {
		this.id = id;
		this.categoriaFiscal = categoriaFiscal;
		this.cliente = cliente;
		this.empresaPauta = empresaPauta;
		this.representante = representante;
		this.clrPer = clrPer;
	}

	public ClienteRepresentante(ClienteRepresentanteId id,
			CategoriaFiscal categoriaFiscal, Cliente cliente,
			CondicaoPagto condicaoPagto, EmpresaPauta empresaPauta,
			FormaPagto formaPagtoByClrFpa, FormaPagto formaPagtoByClrFpc,
			Representante representante, BigDecimal clrPer) {
		this.id = id;
		this.categoriaFiscal = categoriaFiscal;
		this.cliente = cliente;
		this.condicaoPagto = condicaoPagto;
		this.empresaPauta = empresaPauta;
		this.formaPagtoByClrFpa = formaPagtoByClrFpa;
		this.formaPagtoByClrFpc = formaPagtoByClrFpc;
		this.representante = representante;
		this.clrPer = clrPer;
	}

	@EmbeddedId
	@AttributeOverrides({
		@AttributeOverride(name = "clrEmp", column = @Column(name = "CLR_EMP", nullable = false)),
		@AttributeOverride(name = "clrFil", column = @Column(name = "CLR_FIL", nullable = false)),
		@AttributeOverride(name = "clrCli", column = @Column(name = "CLR_CLI", nullable = false)),
		@AttributeOverride(name = "clrRep", column = @Column(name = "CLR_REP", nullable = false)) })
	public ClienteRepresentanteId getId() {
		return this.id;
	}

	public void setId(ClienteRepresentanteId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "CLR_EMP", referencedColumnName = "CGF_EMP", insertable = false, updatable = false), //null
		@JoinColumn(name = "CLR_CGF", referencedColumnName = "CGF_COD", insertable = false, updatable = false) })
	public CategoriaFiscal getCategoriaFiscal() {
		return this.categoriaFiscal;
	}

	public void setCategoriaFiscal(CategoriaFiscal categoriaFiscal) {
		this.categoriaFiscal = categoriaFiscal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "CLR_EMP", referencedColumnName = "CLI_EMP", nullable = false, insertable = false, updatable = false),
		@JoinColumn(name = "CLR_CLI", referencedColumnName = "CLI_COL", nullable = false, insertable = false, updatable = false) })
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CLR_CDP")
	public CondicaoPagto getCondicaoPagto() {
		return this.condicaoPagto;
	}

	public void setCondicaoPagto(CondicaoPagto condicaoPagto) {
		this.condicaoPagto = condicaoPagto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "CLR_EMP", referencedColumnName = "EPT_EMP",  insertable = false, updatable = false), //nullable = false
		@JoinColumn(name = "CLR_PAT", referencedColumnName = "EPT_PAT", insertable = false, updatable = false) })
	public EmpresaPauta getEmpresaPauta() {
		return this.empresaPauta;
	}

	public void setEmpresaPauta(EmpresaPauta empresaPauta) {
		this.empresaPauta = empresaPauta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CLR_FPA")
	public FormaPagto getFormaPagtoByClrFpa() {
		return this.formaPagtoByClrFpa;
	}

	public void setFormaPagtoByClrFpa(FormaPagto formaPagtoByClrFpa) {
		this.formaPagtoByClrFpa = formaPagtoByClrFpa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CLR_FPC")
	public FormaPagto getFormaPagtoByClrFpc() {
		return this.formaPagtoByClrFpc;
	}

	public void setFormaPagtoByClrFpc(FormaPagto formaPagtoByClrFpc) {
		this.formaPagtoByClrFpc = formaPagtoByClrFpc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "CLR_EMP", referencedColumnName = "REP_EMP", nullable = false, insertable = false, updatable = false),
		@JoinColumn(name = "CLR_REP", referencedColumnName = "REP_COL", nullable = false, insertable = false, updatable = false) })
	public Representante getRepresentante() {
		return this.representante;
	}

	public void setRepresentante(Representante representante) {
		this.representante = representante;
	}

	@Column(name = "CLR_PER", nullable = false, precision = 6)
	public BigDecimal getClrPer() {
		return this.clrPer;
	}

	public void setClrPer(BigDecimal clrPer) {
		this.clrPer = clrPer;
	}

	@Column(name = "CLR_FPR", nullable = false )
	public Integer getClrFpr() {
		return this.clrFpr;
	}

	public void setClrFpr(Integer clrFpr) {
		this.clrFpr = clrFpr;
	}

}
