package br.ufsc.creche.model;

// Generated 22/12/2014 15:06:02 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * ColaboradorEmpresa generated by hbm2java
 */
@Entity
@Table(name = "COLABORADOREMPRESA")
public class ColaboradorEmpresa implements java.io.Serializable {

	private static final long serialVersionUID = 4446761742825435221L;
	private ColaboradorEmpresaId id;
	private Colaborador colaborador;
	private Empresa empresa;
	private Integer coeCcc;
	private Integer coeSlc;
	//	private Set<Chequeocorrencia> chequeocorrencias = new HashSet<Chequeocorrencia>(0);
	//	private Set<Abatimento> abatimentos = new HashSet<Abatimento>(0);
	private Set<Pedido> pedidos = new HashSet<Pedido>(0);
	//	private Set<Movimentocones> movimentoconeses = new HashSet<Movimentocones>(0);
	//	private Set<Contratoservico> contratoservicos = new HashSet<Contratoservico>(0);
	//	private Set<Pedidocompra> pedidocompras = new HashSet<Pedidocompra>(0);
	//	private Transportador transportador;
	//	private Set<Colaboradorsaldo> colaboradorsaldos = new HashSet<Colaboradorsaldo>(0);
	//	private Fornecedor fornecedor;
	//	private Set<Chequebaixa> chequebaixas = new HashSet<Chequebaixa>(0);
	//	private Set<Abatimentosaldo> abatimentosaldos = new HashSet<Abatimentosaldo>(0);
	//	private Set<Movimento> movimentosForFkMovCof = new HashSet<Movimento>(0);
	private Cliente cliente;
	private Set<Movimento> movimentosForFkMovCoe = new HashSet<Movimento>(0);
	//	private Set<Notafiscal> notafiscals = new HashSet<Notafiscal>(0);
	//	private Set<Operacaooperador> operacaooperadors = new HashSet<Operacaooperador>(0);
	//	private Set<Pagar> pagars = new HashSet<Pagar>(0);
	//	private Funcionario funcionario;
	//	private Produtor produtor;
	//	private Set<Receber> recebers = new HashSet<Receber>(0);
	//	private Set<Colaboradorempresaocorrencia> colaboradorempresaocorrencias = new HashSet<Colaboradorempresaocorrencia>(0);
	//	private Set<Cheque> cheques = new HashSet<Cheque>(0);
	//	private Set<Custofixo> custofixos = new HashSet<Custofixo>(0);
	private Representante representante;

	@EmbeddedId
	@AttributeOverrides({
		@AttributeOverride(name = "coeEmp", column = @Column(name = "COE_EMP", nullable = false)),
		@AttributeOverride(name = "coeCol", column = @Column(name = "COE_COL", nullable = false)) })
	public ColaboradorEmpresaId getId() {
		return this.id;
	}

	public void setId(ColaboradorEmpresaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COE_COL", nullable = false, insertable = false, updatable = false)
	public Colaborador getColaborador() {
		return this.colaborador;
	}

	public void setColaborador(Colaborador colaborador) {
		this.colaborador = colaborador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COE_EMP", nullable = false, insertable = false, updatable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "COE_CCC")
	public Integer getCoeCcc() {
		return this.coeCcc;
	}

	public void setCoeCcc(Integer coeCcc) {
		this.coeCcc = coeCcc;
	}

	@Column(name = "COE_SLC")
	public Integer getCoeSlc() {
		return this.coeSlc;
	}

	public void setCoeSlc(Integer coeSlc) {
		this.coeSlc = coeSlc;
	}

	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Chequeocorrencia> getChequeocorrencias() {
	//		return this.chequeocorrencias;
	//	}
	//
	//	public void setChequeocorrencias(Set<Chequeocorrencia> chequeocorrencias) {
	//		this.chequeocorrencias = chequeocorrencias;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Abatimento> getAbatimentos() {
	//		return this.abatimentos;
	//	}
	//
	//	public void setAbatimentos(Set<Abatimento> abatimentos) {
	//		this.abatimentos = abatimentos;
	//	}
	//
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorEmpresa"  )
	public Set<Pedido> getPedidos() {
		return this.pedidos;
	}

	public void setPedidos(Set<Pedido> pedidos) {
		this.pedidos = pedidos;
	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Movimentocones> getMovimentoconeses() {
	//		return this.movimentoconeses;
	//	}
	//
	//	public void setMovimentoconeses(Set<Movimentocones> movimentoconeses) {
	//		this.movimentoconeses = movimentoconeses;
	//	}

	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Contratoservico> getContratoservicos() {
	//		return this.contratoservicos;
	//	}
	//
	//	public void setContratoservicos(Set<Contratoservico> contratoservicos) {
	//		this.contratoservicos = contratoservicos;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Pedidocompra> getPedidocompras() {
	//		return this.pedidocompras;
	//	}
	//
	//	public void setPedidocompras(Set<Pedidocompra> pedidocompras) {
	//		this.pedidocompras = pedidocompras;
	//	}
	//
	//	@OneToOne(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Transportador getTransportador() {
	//		return this.transportador;
	//	}
	//
	//	public void setTransportador(Transportador transportador) {
	//		this.transportador = transportador;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Colaboradorsaldo> getColaboradorsaldos() {
	//		return this.colaboradorsaldos;
	//	}
	//
	//	public void setColaboradorsaldos(Set<Colaboradorsaldo> colaboradorsaldos) {
	//		this.colaboradorsaldos = colaboradorsaldos;
	//	}
	//
	//	@OneToOne(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Fornecedor getFornecedor() {
	//		return this.fornecedor;
	//	}

	//	public void setFornecedor(Fornecedor fornecedor) {
	//		this.fornecedor = fornecedor;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Chequebaixa> getChequebaixas() {
	//		return this.chequebaixas;
	//	}
	//
	//	public void setChequebaixas(Set<Chequebaixa> chequebaixas) {
	//		this.chequebaixas = chequebaixas;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Abatimentosaldo> getAbatimentosaldos() {
	//		return this.abatimentosaldos;
	//	}
	//
	//	public void setAbatimentosaldos(Set<Abatimentosaldo> abatimentosaldos) {
	//		this.abatimentosaldos = abatimentosaldos;
	//	}

	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresaByFkMovCof")
	//	public Set<Movimento> getMovimentosForFkMovCof() {
	//		return this.movimentosForFkMovCof;
	//	}
	//
	//	public void setMovimentosForFkMovCof(Set<Movimento> movimentosForFkMovCof) {
	//		this.movimentosForFkMovCof = movimentosForFkMovCof;
	//	}

	/*	@OneToOne(fetch = FetchType.LAZY, mappedBy = "colaboradorEmpresa"  )
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}*/

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorEmpresaByFkMovCoe")
	public Set<Movimento> getMovimentosForFkMovCoe() {
		return this.movimentosForFkMovCoe;
	}

	public void setMovimentosForFkMovCoe(Set<Movimento> movimentosForFkMovCoe) {
		this.movimentosForFkMovCoe = movimentosForFkMovCoe;
	}

	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Notafiscal> getNotafiscals() {
	//		return this.notafiscals;
	//	}
	//
	//	public void setNotafiscals(Set<Notafiscal> notafiscals) {
	//		this.notafiscals = notafiscals;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Operacaooperador> getOperacaooperadors() {
	//		return this.operacaooperadors;
	//	}
	//
	//	public void setOperacaooperadors(Set<Operacaooperador> operacaooperadors) {
	//		this.operacaooperadors = operacaooperadors;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Pagar> getPagars() {
	//		return this.pagars;
	//	}
	//
	//	public void setPagars(Set<Pagar> pagars) {
	//		this.pagars = pagars;
	//	}
	//
	//	@OneToOne(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Funcionario getFuncionario() {
	//		return this.funcionario;
	//	}
	//
	//	public void setFuncionario(Funcionario funcionario) {
	//		this.funcionario = funcionario;
	//	}

	//	@OneToOne(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Produtor getProdutor() {
	//		return this.produtor;
	//	}
	//
	//	public void setProdutor(Produtor produtor) {
	//		this.produtor = produtor;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Receber> getRecebers() {
	//		return this.recebers;
	//	}
	//
	//	public void setRecebers(Set<Receber> recebers) {
	//		this.recebers = recebers;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Colaboradorempresaocorrencia> getColaboradorempresaocorrencias() {
	//		return this.colaboradorempresaocorrencias;
	//	}
	//
	//	public void setColaboradorempresaocorrencias(
	//			Set<Colaboradorempresaocorrencia> colaboradorempresaocorrencias) {
	//		this.colaboradorempresaocorrencias = colaboradorempresaocorrencias;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Cheque> getCheques() {
	//		return this.cheques;
	//	}
	//
	//	public void setCheques(Set<Cheque> cheques) {
	//		this.cheques = cheques;
	//	}

	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorempresa")
	//	public Set<Custofixo> getCustofixos() {
	//		return this.custofixos;
	//	}
	//
	//	public void setCustofixos(Set<Custofixo> custofixos) {
	//		this.custofixos = custofixos;
	//	}
	//
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "colaboradorEmpresa")
	public Representante getRepresentante() {
		return this.representante;
	}

	public void setRepresentante(Representante representante) {
		this.representante = representante;
	}





	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "COE_EMP", referencedColumnName = "CLI_EMP", nullable = false, insertable = false, updatable = false),
		@JoinColumn(name = "COE_COL", referencedColumnName = "CLI_COL", nullable = false, insertable = false, updatable = false) })
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}


}
