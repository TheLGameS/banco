package br.ufsc.creche.model;

// Generated 22/12/2014 15:06:02 by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CategoriaFiscal generated by hbm2java
 */
@Entity
@Table(name = "CATEGORIAFISCAL")
public class CategoriaFiscal implements java.io.Serializable {

	private static final long serialVersionUID = -3909635585573977931L;
	private CategoriaFiscalId id;
	private Empresa empresa;
	private int cgfFil;
	private String cgfNom;
	private BigDecimal cgfPde;
	private BigDecimal cgfPdc;
	private String cgfObs;
	private char cgfOpa;
//	private Set<ClienteRepresentante> clienteRepresentantes = new HashSet<ClienteRepresentante>(0);
	private Set<Pedido> pedidos = new HashSet<Pedido>(0);

	public CategoriaFiscal() {
	}

	public CategoriaFiscal(CategoriaFiscalId id, Empresa empresa, int cgfFil,
			String cgfNom, BigDecimal cgfPde, BigDecimal cgfPdc, char cgfOpa) {
		this.id = id;
		this.empresa = empresa;
		this.cgfFil = cgfFil;
		this.cgfNom = cgfNom;
		this.cgfPde = cgfPde;
		this.cgfPdc = cgfPdc;
		this.cgfOpa = cgfOpa;
	}

	/*public CategoriaFiscal(CategoriaFiscalId id, Empresa empresa, int cgfFil,
			String cgfNom, BigDecimal cgfPde, BigDecimal cgfPdc, String cgfObs,
			char cgfOpa, Set<ClienteRepresentante> clienteRepresentantes,
			Set<Pedido> pedidos) {
		this.id = id;
		this.empresa = empresa;
		this.cgfFil = cgfFil;
		this.cgfNom = cgfNom;
		this.cgfPde = cgfPde;
		this.cgfPdc = cgfPdc;
		this.cgfObs = cgfObs;
		this.cgfOpa = cgfOpa;
		this.clienteRepresentantes = clienteRepresentantes;
		this.pedidos = pedidos;
	}*/

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "cgfEmp", column = @Column(name = "CGF_EMP", nullable = false)),
			@AttributeOverride(name = "cgfCod", column = @Column(name = "CGF_COD", nullable = false, length = 1)) })
	public CategoriaFiscalId getId() {
		return this.id;
	}

	public void setId(CategoriaFiscalId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CGF_EMP", nullable = false, insertable = false, updatable = false)
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "CGF_FIL", nullable = false)
	public int getCgfFil() {
		return this.cgfFil;
	}

	public void setCgfFil(int cgfFil) {
		this.cgfFil = cgfFil;
	}

	@Column(name = "CGF_NOM", nullable = false, length = 40)
	public String getCgfNom() {
		return this.cgfNom;
	}

	public void setCgfNom(String cgfNom) {
		this.cgfNom = cgfNom;
	}

	@Column(name = "CGF_PDE", nullable = false, precision = 6)
	public BigDecimal getCgfPde() {
		return this.cgfPde;
	}

	public void setCgfPde(BigDecimal cgfPde) {
		this.cgfPde = cgfPde;
	}

	@Column(name = "CGF_PDC", nullable = false, precision = 5)
	public BigDecimal getCgfPdc() {
		return this.cgfPdc;
	}

	public void setCgfPdc(BigDecimal cgfPdc) {
		this.cgfPdc = cgfPdc;
	}

	@Column(name = "CGF_OBS", length = 60)
	public String getCgfObs() {
		return this.cgfObs;
	}

	public void setCgfObs(String cgfObs) {
		this.cgfObs = cgfObs;
	}

	@Column(name = "CGF_OPA", nullable = false, length = 1)
	public char getCgfOpa() {
		return this.cgfOpa;
	}

	public void setCgfOpa(char cgfOpa) {
		this.cgfOpa = cgfOpa;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "categoriaFiscal")
//	public Set<ClienteRepresentante> getClienteRepresentantes() {
//		return this.clienteRepresentantes;
//	}
//
//	public void setClienteRepresentantes(
//			Set<ClienteRepresentante> clienteRepresentantes) {
//		this.clienteRepresentantes = clienteRepresentantes;
//	}

	 @OneToMany(fetch = FetchType.LAZY, mappedBy = "categoriaFiscal")
	public Set<Pedido> getPedidos() {
		return this.pedidos;
	}

	public void setPedidos(Set<Pedido> pedidos) {
		this.pedidos = pedidos;
	} 

}
